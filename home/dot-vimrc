" Options
syntax on
colorscheme habamax

let mapleader = " "
let maplocalleader = " "

" Change cursor
let &t_SI = "\e[6 q"
let &t_EI = "\e[2 q"

set number
set relativenumber 
set scrolloff=8
set sidescrolloff=8
set cursorline
set mouse=a
set hlsearch
set incsearch
set autoread

set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set autoindent
set smartindent

set nrformats=bin,hex
set completeopt=menuone,noselect,fuzzy
set wildmode=longest:full,full
set wildignore+=*.o,*.obj,*.pyc,*.class,*.jar
set history=200
set nobackup
set nowritebackup
set undofile
set noswapfile

set signcolumn=yes
set pumheight=10
set synmaxcol=300

set updatetime=300
set timeoutlen=500
set ttimeoutlen=0

set iskeyword+=-
set path+=**

set splitbelow
set splitright

set foldlevel=99
set diffopt+=linematch:60
set maxmempattern=20000

inoremap jk <esc>
cnoremap jk <C-C>

" Keymaps

nnoremap <leader>w :w<cr>
function! s:OpenTermWithCurrentFile()
  botright split
  execute 'terminal' fnameescape(expand('%:p'))
  startinsert!
endfunction

nnoremap <leader>x :call <SID>OpenTermWithCurrentFile()<CR>
nnoremap <leader><leader>v :so<cr>

nnoremap my "+y
xnoremap my "+y
nnoremap mY "+Y
nnoremap mp "+p
xnoremap mp "+P

nnoremap <leader>e :Explore<cr>
nnoremap <leader>f :find 
nnoremap <leader>g :vimgrep  **/*<left><left><left><left><left>

nnoremap <C-l> :<C-u>nohlsearch<cr><C-l>

" Toggle terminal
let g:terminal_bufnr = -1
let g:terminal_winid = -1

function! ToggleTerminal()
  " If terminal window is open and valid
  if g:terminal_winid != -1 && winbufnr(g:terminal_winid) == g:terminal_bufnr
    " In terminal mode? Exit to normal
    if mode() ==# 't'
      call feedkeys("\<C-\\>\<C-n>", 'n')
    endif
    call win_execute(g:terminal_winid, 'hide')
    let g:terminal_winid = -1
    return
  endif

  " Terminal buffer exists and is valid
  if g:terminal_bufnr != -1 && bufexists(g:terminal_bufnr)
    " Reuse buffer
    belowright split
    exec 'buffer ' . g:terminal_bufnr
    let g:terminal_winid = win_getid()
    normal i
  else
    " Create new terminal
    terminal
    let g:terminal_bufnr = bufnr('%')
    let g:terminal_winid = win_getid()
    startinsert
  endif

endfunction

" Key mappings
nnoremap <C-t> :call ToggleTerminal()<CR>
tnoremap <C-t> <C-\><C-n>:call ToggleTerminal()<CR>
